create database CourtStar

use CourtStar

create table Account
(
  account_id int identity(1, 1) primary key,
  email varchar(80),
  password text,
  first_name nvarchar(30),
  last_name nvarchar(50),
  phone char(10),
  is_delete bit not null,
);

create table InvalidatedToken
(
    id varchar(255) primary key,
    expiry_time datetime(6)
);

create table Permission
(
    name varchar(255) primary key,
    description varchar(255)
);

create table Role
(
    name varchar(255) primary key,
    description varchar(255)
);

create table AccountRoles
(
    account_id int not null foreign key references Account(account_id),
    roles_name varchar(255) not null foreign key references Role(name),
    primary key (account_account_id, roles_name),
);

create table RolePermissions
(
    role_name varchar(255) not null foreign key references Role(name),
    permissions_name varchar(255) not null foreign key references Permission(name),
    primary key (role_name, permissions_name),
);

create table Customer
(
  customer_id int identity(1, 1) primary key,
  account_id int unique foreign key references Account(account_id)
);

create table CentreManager
(
  manager_id int identity(1,1) primary key,
  address nvarchar(100),
  current_balance money,
  account_id int unique foreign key references Account(account_id)
);

create table Centre
(
  centre_id int identity(1, 1) primary key,
  name nvarchar(50),
  address nvarchar(100),
  open_time time,
  close_time time,
  price_per_hour money,
  slot_duration int,
  number_of_court int,
  payment_method text,
  status bit,
  approve_date date,
  manager_id int foreign key references CentreManager(manager_id),
);

create table CentreStaff
(
  staff_id int identity (1,1) primary key,
  centre_id int foreign key references Centre(centre_id),
  account_id int unique foreign key references Account(account_id)
);

create table Court
(
  court_id int identity(1,1) primary key,
  court_no int,
  status bit,
  centre_id int foreign key references Centre(centre_id),
);

create table Slot
(
  slot_id int identity(1,1) primary key,
  slot_no int,
  start_time time,
  end_time time,
  centre_id int foreign key references Centre(centre_id),
);

create table BookingSchedule
(
  bs_id int identity(1,1) primary key,
  date date,
  total_price money,
  status bit,
  customer_id int foreign key references Customer(customer_id),
  slot_id int foreign key references Slot(slot_id),
  court_id int foreign key references Court(court_id),
);

create table Feedback
(
  feedback_id int identity(1,1) primary key,
  content text,
  create_date date,
  customer_id int foreign key references Customer(customer_id),
  centre_id int foreign key references Centre(centre_id)
);

create table Image
(
  image_id int identity(1,1) primary key,
  url text,
  centre_id int foreign key references Centre(centre_id)
);

create table Payment
(
  payment_id int identity(1,1) primary key,
  date date,
  status bit,
  payment_method text,
  bs_id int unique foreign key references BookingSchedule(bs_id)
);
